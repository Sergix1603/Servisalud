/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import java.awt.Graphics;
import java.awt.Image;
import javax.mail.Session;

import javax.mail.Message;
import javax.activation.DataSource;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



/**
 *
 * @author Sergio Burga
 */
public class EmailSenderFrame extends javax.swing.JFrame {
    FondoPanel fondo = new FondoPanel();

    /**
     * Creates new form EmailSenderFrame
     */
    public EmailSenderFrame() {
        this.setContentPane(fondo);
        initComponents();
        this.setResizable(false);
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_Destinatario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_asunto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_AREA = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btn_VOLVER = new javax.swing.JButton();
        btn_enviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Destinatario:");

        txt_Destinatario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_Destinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DestinatarioActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Asunto:");

        txt_asunto.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txt_asunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_asuntoActionPerformed(evt);
            }
        });

        txt_AREA.setColumns(20);
        txt_AREA.setRows(5);
        jScrollPane1.setViewportView(txt_AREA);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Contenido:");

        btn_VOLVER.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_VOLVER.setText("VOLVER");
        btn_VOLVER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_VOLVERActionPerformed(evt);
            }
        });

        btn_enviar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_enviar.setText("ENVIAR MENSAJE");
        btn_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_asunto, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(btn_VOLVER)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_asunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(btn_VOLVER))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_VOLVERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_VOLVERActionPerformed
        Menu MN = new Menu();
        MN.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_VOLVERActionPerformed
    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailRegex);
    }
    private boolean isValidSubject(String asunto) {
    // Se permite solo letras, números y algunos caracteres comunes como espacios, puntos, y guiones
    String subjectRegex = "^[a-zA-Z0-9 .,-]+$"; 
    return asunto.matches(subjectRegex);
}
    private void btn_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enviarActionPerformed
         // Simulamos los datos del formulario
    String destinatario = txt_Destinatario.getText();  // Simulamos el destinatario
    String asunto = txt_asunto.getText();              // Simulamos el asunto
    String contenido = txt_AREA.getText().trim();      // Obtenemos el contenido (sin espacios al inicio y final)

    // Verificación de si el destinatario está vacío o no es una dirección válida
    if (destinatario.isEmpty() || !isValidEmail(destinatario)) {
        JOptionPane.showMessageDialog(this, "Correo electrónico inválido. Intenta nuevamente.");
    } 
    // Verificación de si el asunto está vacío
    else if (asunto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "El asunto es obligatorio.");
    } 
    // Verificación si el contenido está vacío
    else if (contenido.isEmpty()) {
        // Pregunta de confirmación si el contenido está vacío
        int respuesta = JOptionPane.showConfirmDialog(this, "El mensaje está vacío. ¿Estás seguro de querer enviar el mensaje?",
                                                      "Confirmación", JOptionPane.YES_NO_OPTION);
        
        if (respuesta == JOptionPane.YES_OPTION) {
            // Simulamos el envío del correo
            // Aquí podrías reemplazar sendEmail(destinatario, asunto, contenido); por un simple log
            System.out.println("Simulando envío de correo...");
            JOptionPane.showMessageDialog(this, "Mensaje enviado correctamente.");  // Mensaje de confirmación
        }
    } 
    // Si el contenido no está vacío, simplemente enviamos el mensaje
    else {
        // Simulamos el envío del correo
        // Aquí también podrías reemplazar sendEmail(destinatario, asunto, contenido); por un simple log
        System.out.println("Simulando envío de correo...");
        JOptionPane.showMessageDialog(this, "Mensaje enviado correctamente.");
    }
    }//GEN-LAST:event_btn_enviarActionPerformed

    private void txt_DestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DestinatarioActionPerformed
        String remitente = txt_Destinatario.getText().trim(); // Obtener el texto del campo y eliminar espacios en blanco

    // Verificar si el campo está vacío o el formato del correo es inválido
    if (remitente.isEmpty() || !isValidEmail(remitente)) {
        JOptionPane.showMessageDialog(this, "Correo inválido. Intenta de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        txt_Destinatario.requestFocus();  // Focaliza el campo para que el usuario pueda corregir el correo
    }
    }//GEN-LAST:event_txt_DestinatarioActionPerformed

    private void txt_asuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_asuntoActionPerformed
        String asunto = txt_asunto.getText().trim(); // Obtener el texto del campo y eliminar espacios en blanco

    // Verificar si el campo está vacío o contiene caracteres no válidos
    if (asunto.isEmpty() || !isValidSubject(asunto)) {
        JOptionPane.showMessageDialog(this, "El asunto es obligatorio y no puede contener caracteres no válidos.", "Error", JOptionPane.ERROR_MESSAGE);
        txt_asunto.requestFocus();  // Focaliza el campo para que el usuario pueda corregir el asunto
    }
    }//GEN-LAST:event_txt_asuntoActionPerformed
    private void sendEmail(String remitente, String asunto, String contenido) {
    // Forzar el uso de TLS 1.2
    System.setProperty("https.protocols", "TLSv1.2");
    System.setProperty("javax.net.ssl.SSLContext", "TLSv1.2");

    // Parámetros de configuración del servidor SMTP
    final String username = "tu_correo@gmail.com"; // Tu dirección de correo electrónico
    final String password = "tu_contraseña"; // Tu contraseña de correo electrónico

    Properties props = new Properties();
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.host", "smtp.gmail.com");
    props.put("mail.smtp.port", "587");

    // Crear una sesión SMTP con la autenticación del usuario
    Session session = Session.getInstance(props,
        new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

    try {
        // Crear el mensaje de correo
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(remitente));
        message.setRecipients(
            Message.RecipientType.TO,
            InternetAddress.parse("destinatario@gmail.com") // Cambia esto por el destinatario real
        );
        message.setSubject(asunto);
        message.setText(contenido);

        // Enviar el mensaje
        Transport.send(message);

        // Mostrar mensaje de éxito
        JOptionPane.showMessageDialog(this, "Mensaje enviado correctamente");

    } catch (MessagingException e) {
        // Mostrar mensaje de error en caso de excepción
        JOptionPane.showMessageDialog(this, "Error al enviar el correo: " + e.getMessage());
        throw new RuntimeException(e);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmailSenderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_VOLVER;
    private javax.swing.JButton btn_enviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txt_AREA;
    private javax.swing.JTextField txt_Destinatario;
    private javax.swing.JTextField txt_asunto;
    // End of variables declaration//GEN-END:variables
class FondoPanel extends JPanel
    {
        private Image imagen;
        
        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/Pictures/fondo_email.png")).getImage();
            
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            
            setOpaque(false);
            
            super.paint(g);
        }
    }
}
